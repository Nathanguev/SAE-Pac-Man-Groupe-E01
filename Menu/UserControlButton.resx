<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p75q0qT/AQFvtmoaynkDAAAAAElFTkSuQmCC
</value>
  </data>
</root>